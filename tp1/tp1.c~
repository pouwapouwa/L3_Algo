#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <assert.h>

typedef struct cell{
  void * obj;
  struct cell * next;
}*cell_t;

typedef struct stack{
  cell_t head;
}*stack_t;

stack_t create_stack(){
  stack_t s= malloc(sizeof(*s));  /* (*s) au lieu de la structure, cela permet 
				     de modifier la structure de s si besoin */
  s->head = NULL;
  return s;
}

void destroy_stack(stack_t s){
  while (! stack_empty(s)){
    pop(s);
  }
  free(s);
}

void push(stack_t s, void * obj){
  cell_t c = malloc(sizeof(*c));
  c->obj = obj;
  c->next=s->head;
  s->head=c;
}

void pop(stack_t s){
  cell_t cel = s->head;
  s->head=s->head->next;
  free(cel);
}

boolean stack_empty(stack_t s){
  return !s->head;
}

void* stack_top(stack_t s){
  assert(s->head);
  return s->head->obj;
}

int max_stack(stack_t s){
  
}
